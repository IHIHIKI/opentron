name: wallet-cli
version: "0.1.0"
author: Shuyu WANG <andelf@gmail.com>
about: Tron Protocol wallet command line util

args:
    - verbose:
          help: Make the operation more talkative
          short: v
          long: verbose
    - network:
          help: Connect to which Tron network
          long: network
          takes_value: true
          possible_values:
              [mainnet, shasta, nile, testnet, dappchain, dappchain-testnet]
          default_value: mainnet
    - name:
          help: Name of the new wallet
          short: n
          long: name
          takes_value: true
          default_value: default

subcommands:
    - get:
          about: Retrieves various items and information from the blockchain
          subcommands:
              - node:
                    about: Get current connected node state information
              - block:
                    about: Retrieves a full block from the blockchain
                    args:
                        - BLOCK:
                              help: The number or ID of the block to retrieve
                              required: true
                              index: 1
              - transaction:
                    about: Retrieves a transaction from the blockchain
                    args:
                        - ID:
                              help: ID of the transaction to retrieve
                              required: true
              - transaction_info:
                    about: Retrieves receipt of atransaction
                    args:
                        - ID:
                              help: ID of the transaction to retrieve
                              required: true
              - account:
                    about: Retrieves an account from the blockchain
                    args:
                        - NAME:
                              help: The name of the account to retrieve
                              required: true
              - account_permission:
                    about: Retrieves account permision info from the blockchain
                    args:
                        - NAME:
                              help: The name of the account to retrieve
                              required: true
              - account_resource:
                    about: Retrieves energy and bandwidth usage of an account
                    args:
                        - NAME:
                              help: The name of the account to retrieve
                              required: true
              - contract:
                    about: Get details of a smart contract
                    args:
                        - ADDR:
                              help: The address of the smart contract
                              required: true

    - set:
          about: Sets or updates the blockchain state
          subcommands:
              - account_permission:
                    about: Creates or updates an account's permission
                    args:
                        - NAME:
                              help: The name of the account to set permisiion
                              required: true
                        - PERMISSION:
                              help: Permission JSON returned from `get account_permission`, `-` for STDIN
                              required: true

    - list:
          about: Lists any items from blockchain
          subcommands:
              - witness:
                    about: Query the list of Super Representatives
              - node:
                    about: List the nodes which is connecting on the network
              - asset:
                    about: Retrieves list of all tokens
              - proposal:
                    about: Retrives list of all proposals

    - transfer:
          about: Transfer a TRX token
          args:
              - SENDER:
                    help: The account sending tokens
                    required: true
              - RECIPIENT:
                    help: The account receiving tokens
                    required: true
              - AMOUNT:
                    help: The amount of tokens to send and the token symbol
                    required: true
              - MEMO:
                    help: The memo for the transfer
                    required: false
              - account:
                    help: The account address used for signing(look up key from unlocked wallet)
                    short: k
                    long: account
                    takes_value: true
              - private-key:
                    help: The private key used for signing
                    short: K
                    long: private-key
                    takes_value: true
                    conflicts_with:
                        - account
              - permission-id:
                    help: Permission id used by transaction
                    long: permission-id
                    takes_value: true
                    possible_values: ["0", "2", "1"]

    - sign:
          about: Sign a transaction
          args:
              - TRANSACTION:
                    help: The JSON string or filename defining the transaction to sign
                    required: true
              - account:
                    help: The account address used for signing(look up key from unlocked wallet)
                    short: k
                    long: account
                    takes_value: true
              - private-key:
                    help: The private key used for signing
                    short: K
                    long: private-key
                    takes_value: true
                    conflicts_with:
                        - account
              - broadcast:
                    help: Broadcast transaction after signing
                    long: broadcast
                    short: b
              - skip:
                    help: Skip actual sign process, may be used with -broadcast
                    long: skip
                    conflicts_with:
                        - account
                        - private-key

    - shielded:
          about: Shielded transaction related commands
          subcommands:
              - new_address:
                    about: Creates a new shielded address
              - debug:
                    about: debug rocks
              - transfer:
                    about: Initiates a shielded transaction, amount can be 'auto'
                    args:
                        - from:
                              help: The address or note for sending TRZ coins
                              short: f
                              long: from
                              multiple: true
                              required: true
                              value_names:
                                  - ADDRESS
                                  - AMOUNT
                        - to:
                              help: The address for receiving TRZ coins
                              short: t
                              long: to
                              multiple: true
                              required: true
                              value_names:
                                  - ADDRESS
                                  - AMOUNT

    - wallet:
          about: Subcommand used to interact with the local wallet
          subcommands:
              - create:
                    about: Creates a new wallet locally
                    args:
                        - password:
                              help: The password of the wallet
                              long: password
                              takes_value: true
                              required: true
              - open:
                    about: Opens an existing wallet
              - lock:
                    about: Locks a wallet
              - unlock:
                    about: Unlocks a wallet
                    args:
                        - password:
                              help: The password of the wallet
                              long: password
                              takes_value: true
                              required: true
              - import_key:
                    about: Imports private key into wallet
                    args:
                        - private-key:
                              help: Private key to import
                              long: private-key
                              takes_value: true
                              required: true
              - keys:
                    about: >
                        List of public keys from all unlocked wallets.
                        These are the keys that could be used to sign transactions.
              - create_key:
                    about: >
                        Creates a key pair within the wallet so that you don't need to manually import it.
              - private_keys:
                    about: >
                        Query for the public and private key pairs of an individual wallet.
                        The wallet must already be unlocked and you must give the password again.
                    args:
                        - password:
                              help: The password of the wallet
                              long: password
                              takes_value: true
                              required: true
