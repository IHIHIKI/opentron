
syntax = "proto3";

package network.tron.walletd;

service LocalWallet {
  rpc Create(CreateRequest) returns (StatusResponse) {}
  rpc Open(OpenRequest) returns (StatusResponse) {}
  rpc Lock(LockRequest) returns (StatusResponse) {}
  rpc Unlock(UnlockRequest) returns (StatusResponse) {}
  rpc LockAll(LockAllRequest) returns (StatusResponse) {}
  rpc CreateKey(CreateKeyRequest) returns (CreateKeyResponse) {}
  rpc ImportKey(ImportKeyRequest) returns (StatusResponse) {}
  rpc ListKeys(ListKeysRequest) returns (ListKeysResponse) {}
  rpc ListKeyPairs(ListKeyPairsRequest) returns (ListKeyPairsResponse) {}
  rpc ListPrivateKeys(ListPrivateKeysRequest)
      returns (ListPrivateKeysResponse) {}
  rpc SignDigest(SignDigestRequest) returns (SignDigestResponse) {}
  // shielded transaction
  rpc CreateZKey(CreateZKeyRequest) returns (CreateZKeyResponse) {}
}

message KeyPair {
  bytes public = 1;
  bytes private = 2;
}

message StatusResponse {
  int32 code = 1;
  string message = 2;
}

message CreateRequest {
  string name = 1;
  string password = 2;
}

message OpenRequest { string name = 1; }

message LockRequest { string name = 1; }

message UnlockRequest {
  string name = 1;
  string password = 2;
}

message LockAllRequest {}

message CreateKeyRequest { string name = 1; }

message CreateKeyResponse {
  int32 code = 1;
  string message = 2;
  KeyPair key_pair = 3;
}

message ImportKeyRequest {
  string name = 1;
  bytes private_key = 2;
}

message ListKeysRequest { string name = 1; }

message ListKeysResponse {
  int32 code = 1;
  string message = 2;
  repeated bytes public_keys = 4;
}

message ListPrivateKeysRequest { string name = 1; }

message ListPrivateKeysResponse {
  int32 code = 1;
  string message = 2;
  repeated bytes private_keys = 5;
}

message ListKeyPairsRequest { string name = 1; }

message ListKeyPairsResponse {
  int32 code = 1;
  string message = 2;
  repeated KeyPair key_pairs = 6;
}

message SignDigestRequest {
  string name = 1;
  bytes digest = 2;
  oneof private_key_of {
    bytes public_key = 3;
    bytes raw_address = 4;
  }
}

message SignDigestResponse {
  int32 code = 1;
  string message = 2;
  bytes signature = 7;
}

message CreateZKeyRequest {}

message CreateZKeyResponse {
  int32 code = 1;
  string message = 2;
  string zaddress = 3;
}
